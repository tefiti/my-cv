{"version":3,"sources":["components/home.js","components/about.js","components/cv.js","components/projects.js","components/contact.js","serviceWorker.js","index.js","App.js"],"names":["Home","className","About","src","alt","CV","Projects","Contact","Boolean","window","location","hostname","match","ReactDOM","render","to","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2PAaeA,MAXf,WACI,OACE,yBAAKC,UAAU,QACb,yCACA,uDACA,gHACA,oDCGOC,MATf,WACI,OACE,yBAAKD,UAAU,SACb,yBAAKE,IAAI,IAAIC,IAAI,kBACjB,uCCOOC,MAXf,WACI,OACE,yBAAKJ,UAAU,MACb,wCACA,yCACA,uDACA,6CCGOK,MATf,WACI,OACE,yBAAKL,UAAU,YACb,4CACA,0CCIOM,MARf,WACI,OACE,yBAAKN,UAAU,WACb,0CCOYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCSD,WACb,OACE,kBAAC,IAAD,KACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,OAAT,OAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAIJ,6BAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,OACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,YDhDI,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.14efaaa0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n      <div className=\"home\">\r\n        <h1>Oana Fuia</h1>\r\n        <h3>Front-end Web Developer</h3>\r\n        <q>Allow passion to become your purpose, and it will one day become your profession.</q>\r\n        <p>Gabrielle Bernstein</p>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n      <div className=\"about\">\r\n        <img src='#' alt=\"woman smiling\"></img>\r\n        <p>Hi all</p>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nfunction CV() {\r\n    return (\r\n      <div className=\"cv\">\r\n        <h2>Practice</h2>\r\n        <h2>Education</h2>\r\n        <h2>Professional Experience</h2>\r\n        <h2>Soft Skills</h2>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CV;","import React from 'react';\r\n\r\nfunction Projects() {\r\n    return (\r\n      <div className=\"projects\">\r\n        <h2>Professional</h2>\r\n        <h2>Personal</h2>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nfunction Contact() {\r\n    return (\r\n      <div className=\"contact\">\r\n        <h2>I'm here</h2>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Home from './components/home';\r\nimport About from './components/about';\r\nimport CV from './components/cv';\r\nimport Projects from \"./components/projects\";\r\nimport Contact from \"./components/contact\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">HOME</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">ABOUT ME</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/cv\">CV</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/projects\">PROJECTS</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact\">CONTACT</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <hr />\r\n\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/cv\">\r\n            <CV />\r\n          </Route>\r\n          <Route path=\"/projects\">\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}